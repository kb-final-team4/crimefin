<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="sql.banking.mapper">
	<!--거래내역 등록-->
	<insert id="insertBanking" parameterType="bankingVO">
		INSERT INTO BANKING(
			banking_id,
			account_num,
			member_id,
			banking_date,
			deposit,
			deposit_name,
			withdrawal,
			withdrawal_to,
			balance)
		VALUES
			(banking_seq.NEXTVAL,#{accountNum},#{memberId},#{bankingDate},#{deposit},#{depositName},#{withdrawal},#{withdrawalTo},#{balance})
	</insert>

	<!--거래내역 조회-->
	<select id="getBanking" parameterType="hashmap" resultType="bankingVO">
		SELECT b.banking_date, b.deposit, b.deposit_name, b.withdrawal,b.withdrawal_to, b.balance
		FROM ACCOUNT a JOIN BANKING b ON a.member_id = b.member_id
		WHERE  b.account_num = #{accountNum}
		  AND (b.BANKING_DATE BETWEEN TO_DATE(#{startDate},'YY/MM/DD') AND TO_DATE(#{endDate},'YY/MM/DD') + 0.99999)
	</select>

	<select id="getMaxBalanceBanking" parameterType="String" resultType="bankingVO">
		SELECT banking_date, account_num, member_id, deposit, deposit_name, withdrawal, withdrawal_to, balance
		FROM banking
		WHERE
		account_num =
		(
			SELECT account_num
			FROM account
			WHERE balance =
			(
				SELECT  max(balance)
				FROM account
				WHERE member_id like #{_parameter}
			)
		)
		AND
		<![CDATA[banking_date <= sysdate and banking_date >= (sysdate - 14)]]>
		order by banking_date
	</select>
</mapper>
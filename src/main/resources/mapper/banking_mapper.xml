<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="sql.banking.mapper">
	<!--거래내역 등록-->
	<insert id="insertBanking" parameterType="bankingVO">
		INSERT INTO BANKING(
			banking_id,
			account_num,
			member_id,
			banking_date,
			deposit,
			deposit_name,
			withdrawal,
			withdrawal_to,
			balance)
		VALUES
			(banking_seq.NEXTVAL,#{accountNum},#{memberId},#{bankingDate},#{deposit},#{depositName},#{withdrawal},#{withdrawalTo},#{balance})
	</insert>

	<!--거래내역 조회-->
	<!--<select id="getBanking" parameterType="hashmap" resultType="bankingVO">
		SELECT b.banking_date, b.deposit, b.deposit_name, b.withdrawal,b.withdrawal_to, b.balance
		FROM ACCOUNT a JOIN BANKING b ON a.member_id = b.member_id
		WHERE  b.account_num = #{accountNum}
		  AND (b.BANKING_DATE BETWEEN TO_DATE(#{startDate},'YY/MM/DD') AND TO_DATE(#{endDate},'YY/MM/DD') + 0.99999)
	</select>-->

	<!--거래내역 조회-->
	<select id="getBanking" parameterType="hashmap" resultType="bankingVO">
		select banking_date, deposit, deposit_name, withdrawal, withdrawal_to, balance
		from banking
		where account_num like #{accountNum}
		  and <![CDATA[ banking_date >= to_date(#{startDate}, 'YYYY-MM-DD') and banking_date <= to_date(#{endDate}, 'YYYY-MM-DD')+0.999 ]]>
	</select>

	<!--limit 이상 거래 내역 조회-->
	<select id = "getLimitBanking" resultType="bankingVO">
		SELECT b.*
		FROM banking b
				 INNER JOIN account a ON b.account_num = a.account_num
		WHERE b.withdrawal > a.limit
	</select>
</mapper>